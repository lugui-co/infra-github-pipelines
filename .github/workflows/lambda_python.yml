name: deploy lambda python

on:
  workflow_call:
    inputs:
      environment:
        type: string
        required: true

jobs:
  deploy:
    environment:
      name: ${{ inputs.environment }}
    runs-on: ubuntu-22.04

    container:
      image: docker://python:${{ vars.DOCKER_IMAGE_TAG || '3.10.14-bullseye' }}

    steps:
      - name: checkout
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'
          token: ${{ secrets.FETCH_TOKEN }}

      - name: Checkout Pipeline Scripts
        uses: actions/checkout@v4
        with:
          repository: lugui-co/infra-github-pipelines
          ref: production
          path: infra-github-pipelines
          token: ${{ secrets.FETCH_TOKEN }}

      - name: deploy
        env:
          ACCOUNT_FAMILY: ${{ vars.ACCOUNT_FAMILY }}
          AWS_DEFAULT_REGION: ${{ vars.AWS_DEFAULT_REGION }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          SERVICE_NAME: ${{ vars.SERVICE_NAME }}
          GO_TO_DIR: ${{ vars.GO_TO_DIR }}
          SERVICE_NAME_ENV_SUFIX: ${{ vars.SERVICE_NAME_ENV_SUFIX }}
        run: |
          echo "Starting Python Lambda deployment..."
          export CI_COMMIT_BRANCH=${GITHUB_REF_NAME}
          export CI_PROJECT_NAME=$(echo "${GITHUB_REPOSITORY}" | awk -F / '{print $2}')

          # Install required packages
          if [ -x "$(command -v apt-get)" ]; then
            apt-get update && apt-get install -y p7zip-full awscli
          fi
          if [ -x "$(command -v apk)" ]; then
            apk add p7zip aws-cli
          fi

          # Source helper scripts
          . infra-github-pipelines/scripts/aws_setup.sh
          . infra-github-pipelines/scripts/lambda_operations.sh

          # Setup AWS credentials
          setup_aws_credentials "${ACCOUNT_FAMILY}" "${CI_COMMIT_BRANCH}"

          # Setup Lambda environment
          setup_lambda_environment "${SERVICE_NAME}" "${CI_PROJECT_NAME}" "${CI_COMMIT_BRANCH}" "${SERVICE_NAME_ENV_SUFIX}"

          # Build Python package
          build_python_package "${GO_TO_DIR}"

          # Update Lambda function
          update_python_lambda "${SERVICE_NAME}"
          
          echo "Python Lambda deployment completed successfully!"
