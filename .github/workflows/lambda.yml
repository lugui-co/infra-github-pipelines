name: Deploy Lambda Function

on:
  workflow_call:
    inputs:
      environment:
        type: string
        required: true

jobs:
  deploy:
    environment:
      name: ${{ inputs.environment }}
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'
          token: ${{ secrets.FETCH_TOKEN }}

      - name: Checkout Pipeline Scripts
        uses: actions/checkout@v4
        with:
          repository: lugui-co/infra-github-pipelines
          ref: production
          path: infra-github-pipelines
          token: ${{ secrets.FETCH_TOKEN }}

      - name: Deploy
        env:
          ACCOUNT_FAMILY: ${{ vars.ACCOUNT_FAMILY }}
          AWS_DEFAULT_REGION: ${{ vars.AWS_DEFAULT_REGION }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          SERVICE_NAME: ${{ vars.SERVICE_NAME }}
          GO_TO_DIR: ${{ vars.GO_TO_DIR }}
          CI_JOB_TOKEN: ${{ secrets.FETCH_TOKEN }}
          SERVICE_NAME_ENV_SUFIX: ${{ vars.SERVICE_NAME_ENV_SUFIX }}
        run: |
          export CI_COMMIT_BRANCH=${GITHUB_REF_NAME}
          export CI_PROJECT_NAME=$(echo "${GITHUB_REPOSITORY}" | awk -F / '{print $2}')

          # Source helper scripts
          source infra-github-pipelines/scripts/aws_setup.sh
          source infra-github-pipelines/scripts/docker_operations.sh
          source infra-github-pipelines/scripts/lambda_operations.sh

          # Setup AWS credentials
          setup_aws_credentials "${ACCOUNT_FAMILY}" "${CI_COMMIT_BRANCH}"

          # Setup Lambda environment
          setup_lambda_environment "${SERVICE_NAME}" "${CI_PROJECT_NAME}" "${CI_COMMIT_BRANCH}" "${SERVICE_NAME_ENV_SUFIX}"

          # Additional deployment steps would go here, depending on the type of Lambda
          # (Docker or Python)