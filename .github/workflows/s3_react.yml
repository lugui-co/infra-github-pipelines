name: Deploy React app to S3

on:
  workflow_call:
    inputs:
      environment:
        type: string
        required: true

jobs:
  build-and-deploy:
    runs-on: ubuntu-22.04

    environment:
      name: ${{ inputs.environment }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'
          token: ${{ secrets.FETCH_TOKEN }}

      - name: Checkout Pipeline Scripts
        uses: actions/checkout@v4
        with:
          repository: lugui-co/infra-github-pipelines
          ref: production
          path: infra-github-pipelines
          token: ${{ secrets.FETCH_TOKEN }}

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Install dependencies and build
        run: |
          npm install
          npm run build

      - name: Set environment variables
        env:
          SERVICE_NAME_PREFIX: ${{ vars.SERVICE_NAME_PREFIX }}
          SERVICE_NAME: ${{ vars.SERVICE_NAME }}
        run: |
          CI_PROJECT_NAME=$(echo $GITHUB_REPOSITORY | awk -F / '{print $2}')
          CI_COMMIT_BRANCH=$GITHUB_REF_NAME
          if [ -z $SERVICE_NAME_PREFIX ]; then
            SERVICE_NAME_PREFIX=lugui
          fi
          if [ -z $SERVICE_NAME ]; then
            SERVICE_NAME=$CI_PROJECT_NAME
          fi
          AWS_S3_BUCKET=${SERVICE_NAME_PREFIX}-${SERVICE_NAME}-${CI_COMMIT_BRANCH}
          echo "AWS_S3_BUCKET=$AWS_S3_BUCKET" >> $GITHUB_ENV
          echo "SERVICE_NAME=$SERVICE_NAME" >> $GITHUB_ENV
          echo "CI_COMMIT_BRANCH=$CI_COMMIT_BRANCH" >> $GITHUB_ENV

      - name: Setup AWS credentials
        env:
          ACCOUNT_FAMILY: ${{ vars.ACCOUNT_FAMILY }}
          AWS_DEFAULT_REGION: ${{ vars.AWS_DEFAULT_REGION }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          # Source helper script
          . infra-github-pipelines/scripts/aws_setup.sh
          
          # Setup AWS credentials
          setup_aws_credentials "${ACCOUNT_FAMILY}" "${CI_COMMIT_BRANCH}"

          # Export AWS profile data
          echo "AWS_ACCESS_KEY_ID=$(aws --profile $AWS_PROFILE configure get aws_access_key_id)" >> $GITHUB_ENV
          echo "AWS_SECRET_ACCESS_KEY=$(aws --profile $AWS_PROFILE configure get aws_secret_access_key)" >> $GITHUB_ENV
          echo "AWS_REGION=$AWS_DEFAULT_REGION" >> $GITHUB_ENV

      - name: Upload to S3
        uses: jakejarvis/s3-sync-action@master
        with:
          args: --delete
        env:
          SOURCE_DIR: ./build

      - name: Get CloudFront distribution ID
        id: distribution_id
        continue-on-error: true
        run: |
          terraform init \
            -backend-config bucket="lugui-terraform-states-${CI_COMMIT_BRANCH}" \
            -backend-config region="$AWS_REGION" \
            -backend-config key=infra/${SERVICE_NAME}/${CI_COMMIT_BRANCH}/terraform.tfstate
          CLOUDFRONT_DISTRIBUTION_ID=$(terraform output -raw cloudfront_distribution_id)
          if [ $(echo $CLOUDFRONT_DISTRIBUTION_ID | cut -c1-1) != 'E' ]; then
            exit 1
          fi
          echo "CLOUDFRONT_DISTRIBUTION_ID=$CLOUDFRONT_DISTRIBUTION_ID" >> $GITHUB_ENV

      - name: Invalidate CloudFront cache
        uses: chetan/invalidate-cloudfront-action@v2
        if: steps.distribution_id.outcome == 'success'
        env:
          DISTRIBUTION: ${{ env.CLOUDFRONT_DISTRIBUTION_ID }}
          PATHS: "/*"
